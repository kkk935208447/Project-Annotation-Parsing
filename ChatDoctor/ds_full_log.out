[2024-04-10 10:23:00,660] torch.distributed.run: [WARNING] 
[2024-04-10 10:23:00,660] torch.distributed.run: [WARNING] *****************************************
[2024-04-10 10:23:00,660] torch.distributed.run: [WARNING] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
[2024-04-10 10:23:00,660] torch.distributed.run: [WARNING] *****************************************
[2024-04-10 10:23:02,853] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-10 10:23:02,854] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-04-10 10:23:03,007] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-10 10:23:03,008] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-04-10 10:23:03,008] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
[INFO|configuration_utils.py:724] 2024-04-10 10:23:03,357 >> loading configuration file /workspace/Llama-2-7b-chat-hf/config.json
[INFO|configuration_utils.py:789] 2024-04-10 10:23:03,358 >> Model config LlamaConfig {
  "_name_or_path": "/workspace/Llama-2-7b-chat-hf",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 11008,
  "max_position_embeddings": 4096,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 32,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "float16",
  "transformers_version": "4.39.3",
  "use_cache": true,
  "vocab_size": 32000
}

[INFO|modeling_utils.py:3280] 2024-04-10 10:23:03,376 >> loading weights file /workspace/Llama-2-7b-chat-hf/pytorch_model.bin.index.json
[INFO|modeling_utils.py:1417] 2024-04-10 10:23:03,376 >> Instantiating LlamaForCausalLM model under default dtype torch.bfloat16.
[INFO|modeling_utils.py:3392] 2024-04-10 10:23:03,376 >> Detected DeepSpeed ZeRO-3: activating zero.init() for this model
[INFO|configuration_utils.py:928] 2024-04-10 10:23:03,380 >> Generate config GenerationConfig {
  "bos_token_id": 1,
  "eos_token_id": 2,
  "use_cache": false
}

[2024-04-10 10:23:07,721] [INFO] [partition_parameters.py:343:__exit__] finished initializing model - num_params = 291, num_elems = 6.74B
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:14<00:14, 14.14s/it]Loading checkpoint shards:  50%|█████     | 1/2 [00:14<00:14, 14.54s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:19<00:00,  8.72s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:19<00:00,  9.54s/it]
Loading checkpoint shards: 100%|██████████| 2/2 [00:19<00:00,  8.73s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:19<00:00,  9.60s/it]
[INFO|modeling_utils.py:4024] 2024-04-10 10:23:26,968 >> All model checkpoint weights were used when initializing LlamaForCausalLM.

[INFO|modeling_utils.py:4032] 2024-04-10 10:23:26,968 >> All the weights of LlamaForCausalLM were initialized from the model checkpoint at /workspace/Llama-2-7b-chat-hf.
If your task is similar to the task the model of the checkpoint was trained on, you can already use LlamaForCausalLM for predictions without further training.
[INFO|configuration_utils.py:881] 2024-04-10 10:23:26,971 >> loading configuration file /workspace/Llama-2-7b-chat-hf/generation_config.json
[INFO|configuration_utils.py:928] 2024-04-10 10:23:26,971 >> Generate config GenerationConfig {
  "bos_token_id": 1,
  "do_sample": true,
  "eos_token_id": 2,
  "max_length": 4096,
  "pad_token_id": 0,
  "temperature": 0.6,
  "top_p": 0.9
}

[INFO|tokenization_utils_base.py:2082] 2024-04-10 10:23:26,973 >> loading file tokenizer.model
[INFO|tokenization_utils_base.py:2082] 2024-04-10 10:23:26,973 >> loading file added_tokens.json
[INFO|tokenization_utils_base.py:2082] 2024-04-10 10:23:26,973 >> loading file special_tokens_map.json
[INFO|tokenization_utils_base.py:2082] 2024-04-10 10:23:26,973 >> loading file tokenizer_config.json
[INFO|tokenization_utils_base.py:2082] 2024-04-10 10:23:26,973 >> loading file tokenizer.json
[INFO|modeling_utils.py:1893] 2024-04-10 10:23:27,130 >> You are resizing the embedding layer without providing a `pad_to_multiple_of` parameter. This means that the new embedding dimension will be 32001. This might induce some performance reduction as *Tensor Cores* will not be available. For more details about this, or help on choosing the correct value for resizing, refer to this guide: https://docs.nvidia.com/deeplearning/performance/dl-performance-matrix-multiplication/index.html#requirements-tc
[INFO|modeling_utils.py:1893] 2024-04-10 10:23:27,306 >> You are resizing the embedding layer without providing a `pad_to_multiple_of` parameter. This means that the new embedding dimension will be 32008. This might induce some performance reduction as *Tensor Cores* will not be available. For more details about this, or help on choosing the correct value for resizing, refer to this guide: https://docs.nvidia.com/deeplearning/performance/dl-performance-matrix-multiplication/index.html#requirements-tc
04/10/2024 10:23:27 - INFO - __main__ - Model LlamaForCausalLM(
  (model): LlamaModel(
    (embed_tokens): Embedding(32008, 4096)
    (layers): ModuleList(
      (0-31): 32 x LlamaDecoderLayer(
        (self_attn): LlamaSdpaAttention(
          (q_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (k_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (v_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (o_proj): Linear(in_features=4096, out_features=4096, bias=False)
          (rotary_emb): LlamaRotaryEmbedding()
        )
        (mlp): LlamaMLP(
          (gate_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (up_proj): Linear(in_features=4096, out_features=11008, bias=False)
          (down_proj): Linear(in_features=11008, out_features=4096, bias=False)
          (act_fn): SiLU()
        )
        (input_layernorm): LlamaRMSNorm()
        (post_attention_layernorm): LlamaRMSNorm()
      )
    )
    (norm): LlamaRMSNorm()
  )
  (lm_head): Linear(in_features=4096, out_features=32008, bias=False)
)
04/10/2024 10:23:27 - INFO - __main__ - Training/evaluation parameters TrainingArguments(
_n_gpu=1,
accelerator_config={'split_batches': False, 'dispatch_batches': None, 'even_batches': True, 'use_seedable_sampler': True},
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=True,
bf16_full_eval=False,
cache_dir=None,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_persistent_workers=False,
dataloader_pin_memory=True,
dataloader_prefetch_factor=None,
ddp_backend=None,
ddp_broadcast_buffers=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
deepspeed=ds_zero3.json,
disable_tqdm=False,
dispatch_batches=None,
do_eval=False,
do_predict=False,
do_train=False,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=None,
evaluation_strategy=no,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
fsdp=[],
fsdp_config={'min_num_params': 0, 'xla': False, 'xla_fsdp_v2': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gradient_accumulation_steps=8,
gradient_checkpointing=True,
gradient_checkpointing_kwargs=None,
greater_is_better=None,
group_by_length=False,
half_precision_backend=auto,
hub_always_push=False,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
include_num_input_tokens_seen=False,
include_tokens_per_second=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=2e-06,
length_column_name=length,
load_best_model_at_end=False,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=/workspace/output/runs/Apr10_10-23-02_b10748d6705e,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=1.0,
logging_strategy=steps,
lr_scheduler_kwargs={},
lr_scheduler_type=linear,
max_grad_norm=0.5,
max_steps=-1,
metric_for_best_model=None,
model_max_length=512,
mp_parameters=,
neftune_noise_alpha=None,
no_cuda=False,
num_train_epochs=1.0,
optim=adamw_torch,
optim_args=None,
optim_target_modules=None,
output_dir=/workspace/output,
overwrite_output_dir=False,
past_index=-1,
per_device_eval_batch_size=1,
per_device_train_batch_size=1,
prediction_loss_only=False,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=True,
report_to=[],
resume_from_checkpoint=None,
run_name=/workspace/output,
save_on_each_node=False,
save_only_model=False,
save_safetensors=True,
save_steps=50,
save_strategy=steps,
save_total_limit=1,
seed=42,
skip_memory_metrics=True,
split_batches=None,
tf32=None,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
use_cpu=False,
use_ipex=False,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.03,
warmup_steps=0,
weight_decay=0.01,
)
04/10/2024 10:23:27 - INFO - __main__ - Model parameters LlamaConfig {
  "_name_or_path": "/workspace/Llama-2-7b-chat-hf",
  "architectures": [
    "LlamaForCausalLM"
  ],
  "attention_bias": false,
  "attention_dropout": 0.0,
  "bos_token_id": 1,
  "eos_token_id": 2,
  "hidden_act": "silu",
  "hidden_size": 4096,
  "initializer_range": 0.02,
  "intermediate_size": 11008,
  "max_position_embeddings": 4096,
  "model_type": "llama",
  "num_attention_heads": 32,
  "num_hidden_layers": 32,
  "num_key_value_heads": 32,
  "pretraining_tp": 1,
  "rms_norm_eps": 1e-05,
  "rope_scaling": null,
  "rope_theta": 10000.0,
  "tie_word_embeddings": false,
  "torch_dtype": "float16",
  "transformers_version": "4.39.3",
  "use_cache": false,
  "vocab_size": 32008
}

04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.embed_tokens.weight - torch.bfloat16 - torch.Size([32008, 4096])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.0.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.1.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.2.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.3.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.4.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.5.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.6.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.7.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.8.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.9.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.10.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.11.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.12.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - WARNING - root - Loading data...
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.13.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.14.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.15.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.16.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.17.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.18.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.19.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.20.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.21.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.22.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.23.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.24.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.25.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.26.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.27.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.28.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.29.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.30.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.self_attn.q_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.self_attn.k_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.self_attn.v_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.self_attn.o_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.mlp.gate_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.mlp.up_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.mlp.down_proj.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.input_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.layers.31.post_attention_layernorm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: model.norm.weight - torch.bfloat16 - torch.Size([0])
04/10/2024 10:23:27 - INFO - __main__ - trainable model arguments: lm_head.weight - torch.bfloat16 - torch.Size([32008, 4096])
04/10/2024 10:23:27 - WARNING - root - Loading data...
04/10/2024 10:23:27 - WARNING - root - Formatting inputs...
04/10/2024 10:23:27 - WARNING - root - Formatting inputs...
04/10/2024 10:23:27 - WARNING - root - Tokenizing inputs... This may take some time...
04/10/2024 10:23:27 - WARNING - root - Tokenizing inputs... This may take some time...
/opt/conda/envs/llm/lib/python3.10/site-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: 
dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)
  warnings.warn(
[INFO|trainer.py:607] 2024-04-10 10:23:36,633 >> Using auto half precision backend
/opt/conda/envs/llm/lib/python3.10/site-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: 
dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)
  warnings.warn(
[2024-04-10 10:23:36,736] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed info: version=0.14.0, git-hash=unknown, git-branch=unknown
[2024-04-10 10:23:36,744] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Flops Profiler Enabled: False
Using /root/.cache/torch_extensions/py310_cu121 as PyTorch extensions root...
Using /root/.cache/torch_extensions/py310_cu121 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py310_cu121/cpu_adam/build.ninja...
Building extension module cpu_adam...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module cpu_adam...
Time to load cpu_adam op: 2.2950196266174316 seconds
Loading extension module cpu_adam...
Time to load cpu_adam op: 2.350412130355835 seconds
Adam Optimizer #0 is created with AVX2 arithmetic capability.
Config: alpha=0.000002, betas=(0.900000, 0.999000), weight_decay=0.010000, adam_w=1
[2024-04-10 10:23:40,793] [INFO] [logging.py:96:log_dist] [Rank 0] Using DeepSpeed Optimizer param name adamw as basic optimizer
[2024-04-10 10:23:40,794] [INFO] [logging.py:96:log_dist] [Rank 0] Removing param_group that has no 'params' in the basic Optimizer
[2024-04-10 10:23:40,808] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Basic Optimizer = DeepSpeedCPUAdam
[2024-04-10 10:23:40,808] [INFO] [utils.py:56:is_zero_supported_optimizer] Checking ZeRO support for optimizer=DeepSpeedCPUAdam type=<class 'deepspeed.ops.adam.cpu_adam.DeepSpeedCPUAdam'>
[2024-04-10 10:23:40,808] [INFO] [logging.py:96:log_dist] [Rank 0] Creating fp16 ZeRO stage 3 optimizer, MiCS is enabled False, Hierarchical params gather False
[2024-04-10 10:23:40,808] [INFO] [logging.py:96:log_dist] [Rank 0] Creating torch.bfloat16 ZeRO stage 3 optimizer
[2024-04-10 10:23:40,902] [INFO] [utils.py:800:see_memory_usage] Stage 3 initialize beginning
[2024-04-10 10:23:40,903] [INFO] [utils.py:801:see_memory_usage] MA 0.55 GB         Max_MA 1.04 GB         CA 0.56 GB         Max_CA 2 GB 
[2024-04-10 10:23:40,903] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 313.31 GB, percent = 62.2%
[2024-04-10 10:23:40,904] [INFO] [stage3.py:130:__init__] Reduce bucket size 16777216
[2024-04-10 10:23:40,904] [INFO] [stage3.py:131:__init__] Prefetch bucket size 15099494
[2024-04-10 10:23:40,993] [INFO] [utils.py:800:see_memory_usage] DeepSpeedZeRoOffload initialize [begin]
[2024-04-10 10:23:40,994] [INFO] [utils.py:801:see_memory_usage] MA 0.55 GB         Max_MA 0.55 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:40,994] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 313.31 GB, percent = 62.2%
Parameter Offload: Total persistent parameters: 266240 in 65 params
[2024-04-10 10:23:41,163] [INFO] [utils.py:800:see_memory_usage] DeepSpeedZeRoOffload initialize [end]
[2024-04-10 10:23:41,164] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.55 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:41,164] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 313.31 GB, percent = 62.2%
[2024-04-10 10:23:41,251] [INFO] [utils.py:800:see_memory_usage] Before creating fp16 partitions
[2024-04-10 10:23:41,251] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:41,251] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 313.31 GB, percent = 62.2%
[2024-04-10 10:23:45,613] [INFO] [utils.py:800:see_memory_usage] After creating fp16 partitions: 4
[2024-04-10 10:23:45,613] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:45,613] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 330.03 GB, percent = 65.5%
[2024-04-10 10:23:45,708] [INFO] [utils.py:800:see_memory_usage] Before creating fp32 partitions
[2024-04-10 10:23:45,708] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:45,709] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 330.37 GB, percent = 65.6%
[2024-04-10 10:23:51,597] [INFO] [utils.py:800:see_memory_usage] After creating fp32 partitions
[2024-04-10 10:23:51,598] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:51,598] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 354.81 GB, percent = 70.5%
[2024-04-10 10:23:51,691] [INFO] [utils.py:800:see_memory_usage] Before initializing optimizer states
[2024-04-10 10:23:51,691] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:23:51,691] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 355.23 GB, percent = 70.5%
[2024-04-10 10:24:01,591] [INFO] [utils.py:800:see_memory_usage] After initializing optimizer states
[2024-04-10 10:24:01,592] [INFO] [utils.py:801:see_memory_usage] MA 0.06 GB         Max_MA 0.06 GB         CA 0.56 GB         Max_CA 1 GB 
[2024-04-10 10:24:01,592] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 383.41 GB, percent = 76.1%
[2024-04-10 10:24:01,593] [INFO] [stage3.py:486:_setup_for_real_optimizer] optimizer state initialized
[2024-04-10 10:24:07,870] [INFO] [utils.py:800:see_memory_usage] After initializing ZeRO optimizer
[2024-04-10 10:24:07,870] [INFO] [utils.py:801:see_memory_usage] MA 0.09 GB         Max_MA 0.58 GB         CA 0.8 GB         Max_CA 1 GB 
[2024-04-10 10:24:07,870] [INFO] [utils.py:808:see_memory_usage] CPU Virtual Memory:  used = 399.75 GB, percent = 79.4%
[2024-04-10 10:24:07,870] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Final Optimizer = adamw
[2024-04-10 10:24:07,871] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed using configured LR scheduler = WarmupDecayLR
[2024-04-10 10:24:07,871] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed LR Scheduler = <deepspeed.runtime.lr_schedules.WarmupDecayLR object at 0x7f7e11c6cd00>
[2024-04-10 10:24:07,871] [INFO] [logging.py:96:log_dist] [Rank 0] step=0, skipped=0, lr=[2e-06], mom=[[0.9, 0.999]]
[2024-04-10 10:24:07,872] [INFO] [config.py:996:print] DeepSpeedEngine configuration:
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   activation_checkpointing_config  {
    "partition_activations": false, 
    "contiguous_memory_optimization": false, 
    "cpu_checkpointing": false, 
    "number_checkpoints": null, 
    "synchronize_checkpoint_boundary": false, 
    "profile": false
}
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   aio_config ................... {'block_size': 1048576, 'queue_depth': 8, 'thread_count': 1, 'single_submit': False, 'overlap_events': True}
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   amp_enabled .................. False
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   amp_params ................... False
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   autotuning_config ............ {
    "enabled": false, 
    "start_step": null, 
    "end_step": null, 
    "metric_path": null, 
    "arg_mappings": null, 
    "metric": "throughput", 
    "model_info": null, 
    "results_dir": "autotuning_results", 
    "exps_dir": "autotuning_exps", 
    "overwrite": true, 
    "fast": true, 
    "start_profile_step": 3, 
    "end_profile_step": 5, 
    "tuner_type": "gridsearch", 
    "tuner_early_stopping": 5, 
    "tuner_num_trials": 50, 
    "model_info_path": null, 
    "mp_size": 1, 
    "max_train_batch_size": null, 
    "min_train_batch_size": 1, 
    "max_train_micro_batch_size_per_gpu": 1.024000e+03, 
    "min_train_micro_batch_size_per_gpu": 1, 
    "num_tuning_micro_batch_sizes": 3
}
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   bfloat16_enabled ............. True
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   bfloat16_immediate_grad_update  False
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   checkpoint_parallel_write_pipeline  False
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   checkpoint_tag_validation_enabled  True
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   checkpoint_tag_validation_fail  False
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   comms_config ................. <deepspeed.comm.config.DeepSpeedCommsConfig object at 0x7f7e58273d30>
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   communication_data_type ...... None
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   compile_config ............... enabled=False backend='inductor' kwargs={}
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   compression_config ........... {'weight_quantization': {'shared_parameters': {'enabled': False, 'quantizer_kernel': False, 'schedule_offset': 0, 'quantize_groups': 1, 'quantize_verbose': False, 'quantization_type': 'symmetric', 'quantize_weight_in_forward': False, 'rounding': 'nearest', 'fp16_mixed_quantize': False, 'quantize_change_ratio': 0.001}, 'different_groups': {}}, 'activation_quantization': {'shared_parameters': {'enabled': False, 'quantization_type': 'symmetric', 'range_calibration': 'dynamic', 'schedule_offset': 1000}, 'different_groups': {}}, 'sparse_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'row_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'head_pruning': {'shared_parameters': {'enabled': False, 'method': 'topk', 'schedule_offset': 1000}, 'different_groups': {}}, 'channel_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'layer_reduction': {'enabled': False}}
[2024-04-10 10:24:07,872] [INFO] [config.py:1000:print]   curriculum_enabled_legacy .... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   curriculum_params_legacy ..... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   data_efficiency_config ....... {'enabled': False, 'seed': 1234, 'data_sampling': {'enabled': False, 'num_epochs': 1000, 'num_workers': 0, 'curriculum_learning': {'enabled': False}}, 'data_routing': {'enabled': False, 'random_ltd': {'enabled': False, 'layer_token_lr_schedule': {'enabled': False}}}}
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   data_efficiency_enabled ...... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   dataloader_drop_last ......... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   disable_allgather ............ False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   dump_state ................... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   dynamic_loss_scale_args ...... None
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_enabled ........... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_gas_boundary_resolution  1
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_layer_name ........ bert.encoder.layer
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_layer_num ......... 0
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_max_iter .......... 100
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_stability ......... 1e-06
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_tol ............... 0.01
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   eigenvalue_verbose ........... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   elasticity_enabled ........... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   flops_profiler_config ........ {
    "enabled": false, 
    "recompute_fwd_factor": 0.0, 
    "profile_step": 1, 
    "module_depth": -1, 
    "top_modules": 1, 
    "detailed": true, 
    "output_file": null
}
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   fp16_auto_cast ............... None
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   fp16_enabled ................. False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   fp16_master_weights_and_gradients  False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   global_rank .................. 0
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   grad_accum_dtype ............. None
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   gradient_accumulation_steps .. 8
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   gradient_clipping ............ 0.5
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   gradient_predivide_factor .... 1.0
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   graph_harvesting ............. False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   hybrid_engine ................ enabled=False max_out_tokens=512 inference_tp_size=1 release_inference_cache=False pin_parameters=True tp_gather_partition_size=8
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   initial_dynamic_scale ........ 1
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   load_universal_checkpoint .... False
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   loss_scale ................... 1.0
[2024-04-10 10:24:07,873] [INFO] [config.py:1000:print]   memory_breakdown ............. False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   mics_hierarchial_params_gather  False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   mics_shard_size .............. -1
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   monitor_config ............... tensorboard=TensorBoardConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') wandb=WandbConfig(enabled=False, group=None, team=None, project='deepspeed') csv_monitor=CSVConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') enabled=False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   nebula_config ................ {
    "enabled": false, 
    "persistent_storage_path": null, 
    "persistent_time_interval": 100, 
    "num_of_version_in_retention": 2, 
    "enable_nebula_load": true, 
    "load_path": null
}
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   optimizer_legacy_fusion ...... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   optimizer_name ............... adamw
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   optimizer_params ............. {'lr': 2e-06, 'betas': [0.9, 0.999], 'eps': 1e-08, 'weight_decay': 0.01}
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   pipeline ..................... {'stages': 'auto', 'partition': 'best', 'seed_layers': False, 'activation_checkpoint_interval': 0, 'pipe_partitioned': True, 'grad_partitioned': True}
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   pld_enabled .................. False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   pld_params ................... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   prescale_gradients ........... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   scheduler_name ............... WarmupDecayLR
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   scheduler_params ............. {'total_num_steps': 340, 'warmup_min_lr': 0, 'warmup_max_lr': 2e-06, 'warmup_num_steps': 11}
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   seq_parallel_communication_data_type  torch.float32
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   sparse_attention ............. None
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   sparse_gradients_enabled ..... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   steps_per_print .............. inf
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   train_batch_size ............. 16
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   train_micro_batch_size_per_gpu  1
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   use_data_before_expert_parallel_  False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   use_node_local_storage ....... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   wall_clock_breakdown ......... False
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   weight_quantization_config ... None
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   world_size ................... 2
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   zero_allow_untested_optimizer  True
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   zero_config .................. stage=3 contiguous_gradients=True reduce_scatter=True reduce_bucket_size=16777216 use_multi_rank_bucket_allreduce=True allgather_partitions=True allgather_bucket_size=500000000 overlap_comm=True load_from_fp32_weights=True elastic_checkpoint=False offload_param=DeepSpeedZeroOffloadParamConfig(device='cpu', nvme_path=None, buffer_count=5, buffer_size=100,000,000, max_in_cpu=1,000,000,000, pin_memory=True) offload_optimizer=DeepSpeedZeroOffloadOptimizerConfig(device='cpu', nvme_path=None, buffer_count=4, pin_memory=True, pipeline=False, pipeline_read=False, pipeline_write=False, fast_init=False, ratio=1.0) sub_group_size=1000000000 cpu_offload_param=None cpu_offload_use_pin_memory=None cpu_offload=None prefetch_bucket_size=15099494 param_persistence_threshold=40960 model_persistence_threshold=sys.maxsize max_live_parameters=1000000000 max_reuse_distance=1000000000 gather_16bit_weights_on_model_save=True stage3_gather_fp16_weights_on_model_save=False ignore_unused_parameters=True legacy_stage1=False round_robin_gradients=False zero_hpz_partition_size=1 zero_quantized_weights=False zero_quantized_nontrainable_weights=False zero_quantized_gradients=False mics_shard_size=-1 mics_hierarchical_params_gather=False memory_efficient_linear=True pipeline_loading_checkpoint=False override_module_apply=True
[2024-04-10 10:24:07,874] [INFO] [config.py:1000:print]   zero_enabled ................. True
[2024-04-10 10:24:07,875] [INFO] [config.py:1000:print]   zero_force_ds_cpu_optimizer .. True
[2024-04-10 10:24:07,875] [INFO] [config.py:1000:print]   zero_optimization_stage ...... 3
[2024-04-10 10:24:07,875] [INFO] [config.py:986:print_user_config]   json = {
    "zero_allow_untested_optimizer": true, 
    "fp16": {
        "enabled": false, 
        "loss_scale": 0, 
        "loss_scale_window": 1000, 
        "initial_scale_power": 16, 
        "hysteresis": 2, 
        "min_loss_scale": 1
    }, 
    "bf16": {
        "enabled": true
    }, 
    "optimizer": {
        "type": "AdamW", 
        "params": {
            "lr": 2e-06, 
            "betas": [0.9, 0.999], 
            "eps": 1e-08, 
            "weight_decay": 0.01
        }
    }, 
    "scheduler": {
        "type": "WarmupDecayLR", 
        "params": {
            "total_num_steps": 340, 
            "warmup_min_lr": 0, 
            "warmup_max_lr": 2e-06, 
            "warmup_num_steps": 11
        }
    }, 
    "zero_optimization": {
        "stage": 3, 
        "offload_optimizer": {
            "device": "cpu", 
            "pin_memory": true
        }, 
        "offload_param": {
            "device": "cpu", 
            "pin_memory": true
        }, 
        "allgather_partitions": true, 
        "allgather_bucket_size": 5.000000e+08, 
        "reduce_scatter": true, 
        "overlap_comm": true, 
        "contiguous_gradients": true, 
        "sub_group_size": 1.000000e+09, 
        "reduce_bucket_size": 1.677722e+07, 
        "stage3_prefetch_bucket_size": 1.509949e+07, 
        "stage3_param_persistence_threshold": 4.096000e+04, 
        "stage3_max_live_parameters": 1.000000e+09, 
        "stage3_max_reuse_distance": 1.000000e+09, 
        "stage3_gather_16bit_weights_on_model_save": true
    }, 
    "gradient_accumulation_steps": 8, 
    "gradient_clipping": 0.5, 
    "steps_per_print": inf, 
    "train_batch_size": 16, 
    "train_micro_batch_size_per_gpu": 1, 
    "wall_clock_breakdown": false
}
[INFO|trainer.py:1969] 2024-04-10 10:24:07,875 >> ***** Running training *****
[INFO|trainer.py:1970] 2024-04-10 10:24:07,875 >>   Num examples = 5,452
[INFO|trainer.py:1971] 2024-04-10 10:24:07,875 >>   Num Epochs = 1
[INFO|trainer.py:1972] 2024-04-10 10:24:07,875 >>   Instantaneous batch size per device = 1
[INFO|trainer.py:1975] 2024-04-10 10:24:07,875 >>   Total train batch size (w. parallel, distributed & accumulation) = 16
[INFO|trainer.py:1976] 2024-04-10 10:24:07,875 >>   Gradient Accumulation steps = 8
[INFO|trainer.py:1977] 2024-04-10 10:24:07,875 >>   Total optimization steps = 340
[INFO|trainer.py:1978] 2024-04-10 10:24:07,876 >>   Number of trainable parameters = 6,738,481,152
  0%|          | 0/340 [00:00<?, ?it/s]/opt/conda/envs/llm/lib/python3.10/site-packages/torch/utils/checkpoint.py:460: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
/opt/conda/envs/llm/lib/python3.10/site-packages/torch/utils/checkpoint.py:460: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
  0%|          | 1/340 [00:48<4:33:30, 48.41s/it]                                                 {'loss': 2.3272, 'grad_norm': 44.53736937121245, 'learning_rate': 0.0, 'epoch': 0.0}
  0%|          | 1/340 [00:48<4:33:30, 48.41s/it]  1%|          | 2/340 [01:29<4:07:57, 44.02s/it]                                                 {'loss': 2.2472, 'grad_norm': 37.23654361865589, 'learning_rate': 5.781296526357756e-07, 'epoch': 0.01}
  1%|          | 2/340 [01:29<4:07:57, 44.02s/it]  1%|          | 3/340 [02:10<3:59:03, 42.56s/it]                                                 {'loss': 2.1551, 'grad_norm': 34.52570303298508, 'learning_rate': 9.163138199826524e-07, 'epoch': 0.01}
  1%|          | 3/340 [02:10<3:59:03, 42.56s/it]  1%|          | 4/340 [02:50<3:54:24, 41.86s/it]                                                 {'loss': 2.1904, 'grad_norm': 35.35431187513148, 'learning_rate': 1.1562593052715513e-06, 'epoch': 0.01}
  1%|          | 4/340 [02:50<3:54:24, 41.86s/it]  1%|▏         | 5/340 [03:31<3:51:04, 41.39s/it]                                                 {'loss': 1.9284, 'grad_norm': 27.48852743645974, 'learning_rate': 1.3423754829424792e-06, 'epoch': 0.01}
  1%|▏         | 5/340 [03:31<3:51:04, 41.39s/it]  2%|▏         | 6/340 [04:14<3:53:04, 41.87s/it]                                                 {'loss': 1.8504, 'grad_norm': 24.753594031583955, 'learning_rate': 1.494443472618428e-06, 'epoch': 0.02}
  2%|▏         | 6/340 [04:14<3:53:04, 41.87s/it]  2%|▏         | 7/340 [04:55<3:51:08, 41.65s/it]                                                 {'loss': 1.8004, 'grad_norm': 23.702768362099473, 'learning_rate': 1.6230151259144977e-06, 'epoch': 0.02}
  2%|▏         | 7/340 [04:55<3:51:08, 41.65s/it]  2%|▏         | 8/340 [05:36<3:48:58, 41.38s/it]                                                 {'loss': 1.8339, 'grad_norm': 22.6192970464812, 'learning_rate': 1.7343889579073268e-06, 'epoch': 0.02}
  2%|▏         | 8/340 [05:36<3:48:58, 41.38s/it]  3%|▎         | 9/340 [06:18<3:49:13, 41.55s/it]                                                 {'loss': 1.3949, 'grad_norm': 20.300283285334807, 'learning_rate': 1.8326276399653048e-06, 'epoch': 0.03}
  3%|▎         | 9/340 [06:18<3:49:13, 41.55s/it]  3%|▎         | 10/340 [06:58<3:46:54, 41.26s/it]                                                  {'loss': 1.4954, 'grad_norm': 20.65716301405066, 'learning_rate': 1.9205051355782547e-06, 'epoch': 0.03}
  3%|▎         | 10/340 [06:58<3:46:54, 41.26s/it]  3%|▎         | 11/340 [07:39<3:44:54, 41.02s/it]                                                  {'loss': 1.2909, 'grad_norm': 21.467428685913124, 'learning_rate': 2e-06, 'epoch': 0.03}
  3%|▎         | 11/340 [07:39<3:44:54, 41.02s/it]  4%|▎         | 12/340 [08:20<3:44:37, 41.09s/it]                                                  {'loss': 1.3808, 'grad_norm': 13.890382230372905, 'learning_rate': 2e-06, 'epoch': 0.04}
  4%|▎         | 12/340 [08:20<3:44:37, 41.09s/it]  4%|▍         | 13/340 [09:01<3:43:05, 40.94s/it]                                                  {'loss': 1.2561, 'grad_norm': 9.900472502558944, 'learning_rate': 1.993920972644377e-06, 'epoch': 0.04}
  4%|▍         | 13/340 [09:01<3:43:05, 40.94s/it]  4%|▍         | 14/340 [09:43<3:44:56, 41.40s/it]                                                  {'loss': 1.3667, 'grad_norm': 9.407428452186485, 'learning_rate': 1.987841945288754e-06, 'epoch': 0.04}
  4%|▍         | 14/340 [09:43<3:44:56, 41.40s/it]  4%|▍         | 15/340 [10:24<3:42:43, 41.12s/it]                                                  {'loss': 1.2292, 'grad_norm': 8.914323968420984, 'learning_rate': 1.9817629179331307e-06, 'epoch': 0.04}
  4%|▍         | 15/340 [10:24<3:42:43, 41.12s/it]  5%|▍         | 16/340 [11:04<3:41:07, 40.95s/it]                                                  {'loss': 1.2728, 'grad_norm': 11.84160471789706, 'learning_rate': 1.9756838905775077e-06, 'epoch': 0.05}
  5%|▍         | 16/340 [11:04<3:41:07, 40.95s/it]  5%|▌         | 17/340 [11:45<3:39:50, 40.84s/it]                                                  {'loss': 1.1109, 'grad_norm': 7.767484814469712, 'learning_rate': 1.9696048632218846e-06, 'epoch': 0.05}
  5%|▌         | 17/340 [11:45<3:39:50, 40.84s/it]  5%|▌         | 18/340 [12:25<3:38:38, 40.74s/it]                                                  {'loss': 1.3571, 'grad_norm': 8.077314147983527, 'learning_rate': 1.9635258358662616e-06, 'epoch': 0.05}
  5%|▌         | 18/340 [12:25<3:38:38, 40.74s/it]  6%|▌         | 19/340 [13:06<3:37:51, 40.72s/it]                                                  {'loss': 1.1723, 'grad_norm': 8.07258105821219, 'learning_rate': 1.957446808510638e-06, 'epoch': 0.06}
  6%|▌         | 19/340 [13:06<3:37:51, 40.72s/it]  6%|▌         | 20/340 [13:47<3:37:04, 40.70s/it]                                                  {'loss': 1.2951, 'grad_norm': 7.7929775610852445, 'learning_rate': 1.951367781155015e-06, 'epoch': 0.06}
  6%|▌         | 20/340 [13:47<3:37:04, 40.70s/it]  6%|▌         | 21/340 [14:27<3:36:16, 40.68s/it]                                                  {'loss': 1.1043, 'grad_norm': 7.1989500975714655, 'learning_rate': 1.945288753799392e-06, 'epoch': 0.06}
  6%|▌         | 21/340 [14:27<3:36:16, 40.68s/it]  6%|▋         | 22/340 [15:08<3:35:40, 40.69s/it]                                                  {'loss': 1.091, 'grad_norm': 6.3573774720031535, 'learning_rate': 1.939209726443769e-06, 'epoch': 0.06}
  6%|▋         | 22/340 [15:08<3:35:40, 40.69s/it]  7%|▋         | 23/340 [15:49<3:35:00, 40.69s/it]                                                  {'loss': 1.3495, 'grad_norm': 6.792723060626654, 'learning_rate': 1.933130699088146e-06, 'epoch': 0.07}
  7%|▋         | 23/340 [15:49<3:35:00, 40.69s/it]  7%|▋         | 24/340 [16:30<3:35:05, 40.84s/it]                                                  {'loss': 1.2018, 'grad_norm': 8.876979123655547, 'learning_rate': 1.927051671732523e-06, 'epoch': 0.07}
  7%|▋         | 24/340 [16:30<3:35:05, 40.84s/it]  7%|▋         | 25/340 [17:10<3:33:54, 40.74s/it]                                                  {'loss': 1.1615, 'grad_norm': 7.622591232299326, 'learning_rate': 1.9209726443768998e-06, 'epoch': 0.07}
  7%|▋         | 25/340 [17:10<3:33:54, 40.74s/it]  8%|▊         | 26/340 [17:51<3:33:42, 40.84s/it]                                                  {'loss': 1.1007, 'grad_norm': 7.731202247367305, 'learning_rate': 1.9148936170212767e-06, 'epoch': 0.08}
  8%|▊         | 26/340 [17:51<3:33:42, 40.84s/it]  8%|▊         | 27/340 [18:32<3:32:36, 40.75s/it]                                                  {'loss': 1.2975, 'grad_norm': 6.106721970309132, 'learning_rate': 1.9088145896656533e-06, 'epoch': 0.08}
  8%|▊         | 27/340 [18:32<3:32:36, 40.75s/it]  8%|▊         | 28/340 [19:14<3:34:42, 41.29s/it]                                                  {'loss': 1.2007, 'grad_norm': 6.961304112294453, 'learning_rate': 1.9027355623100302e-06, 'epoch': 0.08}
  8%|▊         | 28/340 [19:14<3:34:42, 41.29s/it]  9%|▊         | 29/340 [19:58<3:36:56, 41.85s/it]                                                  {'loss': 1.1487, 'grad_norm': 5.911931932834376, 'learning_rate': 1.8966565349544071e-06, 'epoch': 0.09}
  9%|▊         | 29/340 [19:58<3:36:56, 41.85s/it]  9%|▉         | 30/340 [20:38<3:34:11, 41.46s/it]                                                  {'loss': 0.9637, 'grad_norm': 6.082937811269443, 'learning_rate': 1.8905775075987843e-06, 'epoch': 0.09}
  9%|▉         | 30/340 [20:38<3:34:11, 41.46s/it]  9%|▉         | 31/340 [21:19<3:32:35, 41.28s/it]                                                  {'loss': 1.0922, 'grad_norm': 6.407684909803252, 'learning_rate': 1.884498480243161e-06, 'epoch': 0.09}
  9%|▉         | 31/340 [21:19<3:32:35, 41.28s/it]  9%|▉         | 32/340 [22:00<3:30:42, 41.05s/it]                                                  {'loss': 1.162, 'grad_norm': 8.070591377986478, 'learning_rate': 1.878419452887538e-06, 'epoch': 0.09}
  9%|▉         | 32/340 [22:00<3:30:42, 41.05s/it] 10%|▉         | 33/340 [22:40<3:29:16, 40.90s/it]                                                  {'loss': 1.0859, 'grad_norm': 5.796405783528636, 'learning_rate': 1.872340425531915e-06, 'epoch': 0.1}
 10%|▉         | 33/340 [22:40<3:29:16, 40.90s/it] 10%|█         | 34/340 [23:21<3:28:07, 40.81s/it]                                                  {'loss': 1.3367, 'grad_norm': 6.217942688646855, 'learning_rate': 1.8662613981762919e-06, 'epoch': 0.1}
 10%|█         | 34/340 [23:21<3:28:07, 40.81s/it] 10%|█         | 35/340 [24:01<3:27:15, 40.77s/it]                                                  {'loss': 1.0655, 'grad_norm': 6.508018829262193, 'learning_rate': 1.8601823708206686e-06, 'epoch': 0.1}
 10%|█         | 35/340 [24:01<3:27:15, 40.77s/it] 11%|█         | 36/340 [24:44<3:30:03, 41.46s/it]                                                  {'loss': 1.0045, 'grad_norm': 5.855630965273072, 'learning_rate': 1.8541033434650456e-06, 'epoch': 0.11}
 11%|█         | 36/340 [24:44<3:30:03, 41.46s/it] 11%|█         | 37/340 [25:27<3:30:49, 41.75s/it]                                                  {'loss': 1.017, 'grad_norm': 5.579598881240219, 'learning_rate': 1.8480243161094225e-06, 'epoch': 0.11}
 11%|█         | 37/340 [25:27<3:30:49, 41.75s/it] 11%|█         | 38/340 [26:07<3:28:24, 41.41s/it]                                                  {'loss': 1.0484, 'grad_norm': 6.602217168906985, 'learning_rate': 1.8419452887537995e-06, 'epoch': 0.11}
 11%|█         | 38/340 [26:07<3:28:24, 41.41s/it] 11%|█▏        | 39/340 [26:48<3:27:07, 41.29s/it]                                                  {'loss': 1.0248, 'grad_norm': 5.897171066444831, 'learning_rate': 1.8358662613981762e-06, 'epoch': 0.11}
 11%|█▏        | 39/340 [26:48<3:27:07, 41.29s/it] 12%|█▏        | 40/340 [27:29<3:25:21, 41.07s/it]                                                  {'loss': 1.0883, 'grad_norm': 6.313643550213331, 'learning_rate': 1.8297872340425531e-06, 'epoch': 0.12}
 12%|█▏        | 40/340 [27:29<3:25:21, 41.07s/it] 12%|█▏        | 41/340 [28:10<3:24:01, 40.94s/it]                                                  {'loss': 0.9628, 'grad_norm': 5.676443230709248, 'learning_rate': 1.82370820668693e-06, 'epoch': 0.12}
 12%|█▏        | 41/340 [28:10<3:24:01, 40.94s/it] 12%|█▏        | 42/340 [28:50<3:22:52, 40.85s/it]                                                  {'loss': 1.0562, 'grad_norm': 5.9580845636395985, 'learning_rate': 1.817629179331307e-06, 'epoch': 0.12}
 12%|█▏        | 42/340 [28:50<3:22:52, 40.85s/it] 13%|█▎        | 43/340 [29:31<3:22:34, 40.92s/it]                                                  {'loss': 1.1094, 'grad_norm': 5.652920412122483, 'learning_rate': 1.8115501519756838e-06, 'epoch': 0.13}
 13%|█▎        | 43/340 [29:31<3:22:34, 40.92s/it] 13%|█▎        | 44/340 [30:12<3:21:10, 40.78s/it]                                                  {'loss': 1.0253, 'grad_norm': 7.616035569949393, 'learning_rate': 1.8054711246200607e-06, 'epoch': 0.13}
 13%|█▎        | 44/340 [30:12<3:21:10, 40.78s/it] 13%|█▎        | 45/340 [30:53<3:21:01, 40.89s/it]                                                  {'loss': 1.0058, 'grad_norm': 6.310005223775355, 'learning_rate': 1.7993920972644377e-06, 'epoch': 0.13}
 13%|█▎        | 45/340 [30:53<3:21:01, 40.89s/it] 14%|█▎        | 46/340 [31:34<3:19:48, 40.78s/it]                                                  {'loss': 0.969, 'grad_norm': 6.201535114853557, 'learning_rate': 1.7933130699088146e-06, 'epoch': 0.13}
 14%|█▎        | 46/340 [31:34<3:19:48, 40.78s/it] 14%|█▍        | 47/340 [32:14<3:18:55, 40.73s/it]                                                  {'loss': 0.8747, 'grad_norm': 5.4540458710507185, 'learning_rate': 1.7872340425531913e-06, 'epoch': 0.14}
 14%|█▍        | 47/340 [32:14<3:18:55, 40.73s/it] 14%|█▍        | 48/340 [32:55<3:18:00, 40.69s/it]                                                  {'loss': 0.976, 'grad_norm': 5.878953293520248, 'learning_rate': 1.7811550151975683e-06, 'epoch': 0.14}
 14%|█▍        | 48/340 [32:55<3:18:00, 40.69s/it] 14%|█▍        | 49/340 [33:36<3:18:12, 40.87s/it]                                                  {'loss': 1.1896, 'grad_norm': 6.245350137978436, 'learning_rate': 1.7750759878419452e-06, 'epoch': 0.14}
 14%|█▍        | 49/340 [33:36<3:18:12, 40.87s/it] 15%|█▍        | 50/340 [34:17<3:17:07, 40.79s/it]                                                  {'loss': 1.1666, 'grad_norm': 5.769350083902432, 'learning_rate': 1.7689969604863222e-06, 'epoch': 0.15}
 15%|█▍        | 50/340 [34:17<3:17:07, 40.79s/it][INFO|trainer.py:3203] 2024-04-10 10:58:31,678 >> Saving model checkpoint to /workspace/output/checkpoint-50
[INFO|configuration_utils.py:471] 2024-04-10 10:58:31,679 >> Configuration saved in /workspace/output/checkpoint-50/config.json
[INFO|configuration_utils.py:697] 2024-04-10 10:58:31,680 >> Configuration saved in /workspace/output/checkpoint-50/generation_config.json
[INFO|modeling_utils.py:2482] 2024-04-10 10:58:38,804 >> The model is bigger than the maximum size per checkpoint (5GB) and is going to be split in 3 checkpoint shards. You can find where each parameters has been saved in the index located at /workspace/output/checkpoint-50/model.safetensors.index.json.
[INFO|tokenization_utils_base.py:2502] 2024-04-10 10:58:38,805 >> tokenizer config file saved in /workspace/output/checkpoint-50/tokenizer_config.json
[INFO|tokenization_utils_base.py:2511] 2024-04-10 10:58:38,805 >> Special tokens file saved in /workspace/output/checkpoint-50/special_tokens_map.json
[INFO|tokenization_utils_base.py:2562] 2024-04-10 10:58:38,805 >> added tokens file saved in /workspace/output/checkpoint-50/added_tokens.json
[2024-04-10 10:58:39,212] [INFO] [logging.py:96:log_dist] [Rank 0] [Torch] Checkpoint global_step50 is about to be saved!
/opt/conda/envs/llm/lib/python3.10/site-packages/torch/nn/modules/module.py:1877: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
/opt/conda/envs/llm/lib/python3.10/site-packages/torch/nn/modules/module.py:1877: UserWarning: Positional args are being deprecated, use kwargs instead. Refer to https://pytorch.org/docs/master/generated/torch.nn.Module.html#torch.nn.Module.state_dict for details.
  warnings.warn(
[2024-04-10 10:58:39,219] [INFO] [logging.py:96:log_dist] [Rank 0] Saving model checkpoint: /workspace/output/checkpoint-50/global_step50/zero_pp_rank_0_mp_rank_00_model_states.pt
[2024-04-10 10:58:39,219] [INFO] [torch_checkpoint_engine.py:21:save] [Torch] Saving /workspace/output/checkpoint-50/global_step50/zero_pp_rank_0_mp_rank_00_model_states.pt...
[2024-04-10 10:58:39,229] [INFO] [torch_checkpoint_engine.py:23:save] [Torch] Saved /workspace/output/checkpoint-50/global_step50/zero_pp_rank_0_mp_rank_00_model_states.pt.
[2024-04-10 10:58:39,231] [INFO] [torch_checkpoint_engine.py:21:save] [Torch] Saving /workspace/output/checkpoint-50/global_step50/bf16_zero_pp_rank_0_mp_rank_00_optim_states.pt...
[2024-04-10 10:59:46,702] [INFO] [torch_checkpoint_engine.py:23:save] [Torch] Saved /workspace/output/checkpoint-50/global_step50/bf16_zero_pp_rank_0_mp_rank_00_optim_states.pt.
[2024-04-10 10:59:46,722] [INFO] [engine.py:3488:_save_zero_checkpoint] zero checkpoint saved /workspace/output/checkpoint-50/global_step50/bf16_zero_pp_rank_0_mp_rank_00_optim_states.pt
[2024-04-10 10:59:46,732] [INFO] [torch_checkpoint_engine.py:33:commit] [Torch] Checkpoint global_step50 is ready now!
/opt/conda/envs/llm/lib/python3.10/site-packages/torch/utils/checkpoint.py:460: UserWarning: torch.utils.checkpoint: please pass in use_reentrant=True or use_reentrant=False explicitly. The default value of use_reentrant will be updated to be False in the future. To maintain current behavior, pass use_reentrant=True. It is recommended that you use use_reentrant=False. Refer to docs for more details on the differences between the two variants.
  warnings.warn(
 15%|█▌        | 51/340 [36:19<5:14:40, 65.33s/it]                                                  {'loss': 1.1592, 'grad_norm': 6.632633346097141, 'learning_rate': 1.762917933130699e-06, 'epoch': 0.15}
 15%|█▌        | 51/340 [36:19<5:14:40, 65.33s/it] 15%|█▌        | 52/340 [37:00<4:38:13, 57.96s/it]                                                  {'loss': 1.0125, 'grad_norm': 5.860820134288748, 'learning_rate': 1.7568389057750759e-06, 'epoch': 0.15}
 15%|█▌        | 52/340 [37:00<4:38:13, 57.96s/it] 16%|█▌        | 53/340 [37:41<4:12:28, 52.78s/it]                                                  {'loss': 0.8748, 'grad_norm': 5.961503188263165, 'learning_rate': 1.7507598784194528e-06, 'epoch': 0.16}
 16%|█▌        | 53/340 [37:41<4:12:28, 52.78s/it] 16%|█▌        | 54/340 [38:22<3:54:38, 49.23s/it]                                                  {'loss': 1.155, 'grad_norm': 5.782766772102031, 'learning_rate': 1.7446808510638297e-06, 'epoch': 0.16}
 16%|█▌        | 54/340 [38:22<3:54:38, 49.23s/it] 16%|█▌        | 55/340 [39:03<3:42:26, 46.83s/it]                                                  {'loss': 0.8613, 'grad_norm': 6.0575865665284825, 'learning_rate': 1.7386018237082065e-06, 'epoch': 0.16}
 16%|█▌        | 55/340 [39:03<3:42:26, 46.83s/it] 16%|█▋        | 56/340 [39:44<3:33:05, 45.02s/it]                                                  {'loss': 0.9281, 'grad_norm': 4.3606134658536275, 'learning_rate': 1.7325227963525834e-06, 'epoch': 0.16}
 16%|█▋        | 56/340 [39:44<3:33:05, 45.02s/it] 17%|█▋        | 57/340 [40:24<3:26:12, 43.72s/it]                                                  {'loss': 1.1005, 'grad_norm': 6.366127571862699, 'learning_rate': 1.7264437689969604e-06, 'epoch': 0.17}
 17%|█▋        | 57/340 [40:24<3:26:12, 43.72s/it] 17%|█▋        | 58/340 [41:06<3:23:10, 43.23s/it]                                                  {'loss': 1.0616, 'grad_norm': 5.914435633147306, 'learning_rate': 1.7203647416413373e-06, 'epoch': 0.17}
 17%|█▋        | 58/340 [41:06<3:23:10, 43.23s/it] 17%|█▋        | 59/340 [41:47<3:19:06, 42.51s/it]                                                  {'loss': 0.9197, 'grad_norm': 5.996984359753894, 'learning_rate': 1.714285714285714e-06, 'epoch': 0.17}
 17%|█▋        | 59/340 [41:47<3:19:06, 42.51s/it] 18%|█▊        | 60/340 [42:28<3:15:50, 41.97s/it]                                                  {'loss': 1.0004, 'grad_norm': 7.0339724547123685, 'learning_rate': 1.708206686930091e-06, 'epoch': 0.18}
 18%|█▊        | 60/340 [42:28<3:15:50, 41.97s/it] 18%|█▊        | 61/340 [43:09<3:13:12, 41.55s/it]                                                  {'loss': 1.0231, 'grad_norm': 6.501850451652537, 'learning_rate': 1.702127659574468e-06, 'epoch': 0.18}
 18%|█▊        | 61/340 [43:09<3:13:12, 41.55s/it] 18%|█▊        | 62/340 [43:49<3:11:05, 41.24s/it]                                                  {'loss': 0.9072, 'grad_norm': 5.50750670970728, 'learning_rate': 1.696048632218845e-06, 'epoch': 0.18}
 18%|█▊        | 62/340 [43:49<3:11:05, 41.24s/it] 19%|█▊        | 63/340 [44:30<3:09:42, 41.09s/it]                                                  {'loss': 1.0655, 'grad_norm': 6.220045405280415, 'learning_rate': 1.6899696048632216e-06, 'epoch': 0.18}
 19%|█▊        | 63/340 [44:30<3:09:42, 41.09s/it] 19%|█▉        | 64/340 [45:13<3:11:17, 41.59s/it]                                                  {'loss': 1.0254, 'grad_norm': 5.930112720466737, 'learning_rate': 1.6838905775075986e-06, 'epoch': 0.19}
 19%|█▉        | 64/340 [45:13<3:11:17, 41.59s/it] 19%|█▉        | 65/340 [45:53<3:09:00, 41.24s/it]                                                  {'loss': 0.8431, 'grad_norm': 5.923027308939357, 'learning_rate': 1.6778115501519755e-06, 'epoch': 0.19}
 19%|█▉        | 65/340 [45:53<3:09:00, 41.24s/it] 19%|█▉        | 66/340 [46:34<3:07:27, 41.05s/it]                                                  {'loss': 0.8285, 'grad_norm': 6.733725815214946, 'learning_rate': 1.6717325227963525e-06, 'epoch': 0.19}
 19%|█▉        | 66/340 [46:34<3:07:27, 41.05s/it] 20%|█▉        | 67/340 [47:14<3:06:08, 40.91s/it]                                                  {'loss': 0.7175, 'grad_norm': 5.8244974337040105, 'learning_rate': 1.6656534954407292e-06, 'epoch': 0.2}
 20%|█▉        | 67/340 [47:14<3:06:08, 40.91s/it] 20%|██        | 68/340 [47:56<3:06:31, 41.15s/it]                                                  {'loss': 0.9623, 'grad_norm': 5.826052708930493, 'learning_rate': 1.6595744680851064e-06, 'epoch': 0.2}
 20%|██        | 68/340 [47:56<3:06:31, 41.15s/it] 20%|██        | 69/340 [48:37<3:05:10, 41.00s/it]                                                  {'loss': 1.1051, 'grad_norm': 5.422237329166679, 'learning_rate': 1.6534954407294833e-06, 'epoch': 0.2}
 20%|██        | 69/340 [48:37<3:05:10, 41.00s/it] 21%|██        | 70/340 [49:17<3:03:49, 40.85s/it]                                                  {'loss': 1.0127, 'grad_norm': 5.374149876278126, 'learning_rate': 1.6474164133738603e-06, 'epoch': 0.21}
 21%|██        | 70/340 [49:17<3:03:49, 40.85s/it] 21%|██        | 71/340 [49:58<3:02:45, 40.76s/it]                                                  {'loss': 1.0176, 'grad_norm': 6.015190604242819, 'learning_rate': 1.641337386018237e-06, 'epoch': 0.21}
 21%|██        | 71/340 [49:58<3:02:45, 40.76s/it] 21%|██        | 72/340 [50:38<3:01:57, 40.74s/it]                                                  {'loss': 1.0727, 'grad_norm': 5.9903919857199766, 'learning_rate': 1.635258358662614e-06, 'epoch': 0.21}
 21%|██        | 72/340 [50:38<3:01:57, 40.74s/it] 21%|██▏       | 73/340 [51:19<3:01:07, 40.70s/it]                                                  {'loss': 1.0806, 'grad_norm': 5.016605079416472, 'learning_rate': 1.6291793313069909e-06, 'epoch': 0.21}
 21%|██▏       | 73/340 [51:19<3:01:07, 40.70s/it] 22%|██▏       | 74/340 [52:01<3:02:18, 41.12s/it]                                                  {'loss': 0.9783, 'grad_norm': 6.04043433238274, 'learning_rate': 1.6231003039513678e-06, 'epoch': 0.22}
 22%|██▏       | 74/340 [52:01<3:02:18, 41.12s/it]